{"version":3,"sources":["algorithms sync /^/.*$","components/Homepage.js","components/LeftDrawer.js","components/NavBar.js","components/Dropzone.js","components/GraphBuilder.js","components/SPP.js","components/MFP.js","components/MCFP.js","App.js","serviceWorker.js","index.js","algorithms/dijkstra.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Homepage","props","state","classes","this","className","top","divLogo","style","extAlign","divFooter","Component","withStyles","theme","root","minWidth","overflowX","table","marginTop","width","textField","margin","appLogo","display","padding","height","appLogoFooter","border","paddingLeft","paddingRight","position","bottom","LeftDrawer","toggleDrawer","bind","open","onRef","undefined","setState","onToggle","Drawer","variant","paper","to","textDecoration","Tooltip","title","MenuItem","ListItemIcon","Home","ListItemText","primary","Directions","TrendingUp","TrendingDown","React","NavBar","AppBar","Toolbar","IconButton","color","aria-label","onClick","Typography","Dropzone","onDrop","accepted","rejected","scope","reader","FileReader","onload","progressEvent","f","JSON","parse","result","validate","adapt","getFile","SyntaxError","showMessage","readAsText","message","mode","validationMode","modes","SPP","nodes","edges","el","x","Math","random","y","type","handleText","Array","isArray","nodesIds","i","every","includes","join","push","entries","source","target","Paper","hide","accept","getRootProps","getInputProps","GraphConfig","NodeTypes","empty","shapeId","shape","viewBox","key","cx","cy","r","stroke","startNode","strokeWidth","endNode","currentNode","pathNode","visitedNode","NodeSubtypes","EdgeTypes","emptyEdge","pathEdge","visitedEdge","currentEdge","GraphBuilder","selected","moveNode","c","aName","aValue","concat","attr","getAttribute","document","createAttribute","setAttribute","labelSize","layoutEngineType","ref","nodeKey","nodeTypes","nodeSubtypes","edgeTypes","readOnly","onSelectNode","onCreateNode","onUpdateNode","onDeleteNode","onSelectEdge","onCreateEdge","onSwapEdge","onDeleteEdge","canCreateEdge","onBackgroundClick","edgeArrowSize","renderDefs","k","v","ARROW_SIZE","refX","markerWidth","markerHeight","orient","d","fill","renderNodeText","data","isSelected","textAnchor","dy","fontSize","fontWeight","distance","afterRenderEdge","element","edge","edgeContainer","isEdgeSelected","parentNode","insertBefore","firstChild","edgeColor","comp","querySelector","comp_list","querySelectorAll","length","sourceNode","x1","y1","targetNode","x2","y2","tan","deg","atan","PI","innerHTML","flow","cost","costTag","cloneNode","capacity","parentElement","appendChild","transform","capacityTag","file","indexes","states","phase","step","substep","onReset","stateIndex","endIndex","nextSteps","onChange","engine","splice","n","value","setTimeout","s","nextStep","launchAlgorithm","prevStep","pred","dist","name","algorithm","require","newState","stringify","prevType","preprocess","node","leavingStar","idx","process","updateNode","postprocess","disableNext","Button","ButtonGroup","disabled","KeyboardArrowLeft","KeyboardArrowRight","TextField","select","label","input","OutlinedInput","PlayArrow","MFP","MCFP","App","onToggleDrawer","sidebar","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.12361817.chunk.js","sourcesContent":["var map = {\n\t\"./dijkstra\": 68,\n\t\"./dijkstra.js\": 68\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 102;","import React, { Component } from 'react'\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = theme =>  ({\r\n    root: {\r\n      minWidth: \"40%\",\r\n      overflowX: \"auto\"\r\n    },\r\n    table: {\r\n      minWidth: 250\r\n    },\r\n    top: {\r\n        marginTop: 70,\r\n        width: '100%'\r\n    },\r\n    textField: {\r\n        minWidth: 250,\r\n        margin: 0,\r\n        width: '100%'\r\n    },\r\n    appLogo: {\r\n        display: 'block',\r\n        padding: 0,\r\n        width: '60%',\r\n        height: '60%',\r\n        margin: '0 auto 0 auto'\r\n      },\r\n    divLogo:{\r\n        height: '50%',\r\n        width: '100%',\r\n        margin: 0,\r\n        padding: 0\r\n    },\r\n    appLogoFooter: {\r\n        border: 'solid 1px',\r\n        display: 'block',\r\n        margin: '0 auto',\r\n        paddingLeft: 0,\r\n        paddingRight: 0,\r\n        width: '50%',\r\n        height: '50%'\r\n    },\r\n    divFooter:{\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        padding: 0,\r\n        width: '93%',\r\n        margin: 0\r\n    }\r\n  });\r\n\r\n\r\nclass Homepage extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {}\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className={classes.top}>\r\n                <div className={classes.divLogo}>\r\n                    <div style={{extAlign: 'center'}}><h1>NETWORK FLOWS OPTIMIZATION</h1></div>\r\n                </div>\r\n                <div className={classes.divFooter}>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default (withStyles(styles)(Homepage));","import React from 'react';\r\nimport { Drawer, Tooltip } from '@material-ui/core';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport {Home, Directions, TrendingDown, TrendingUp} from '@material-ui/icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport '../css/LeftDrawer.css';\r\n\r\n\r\nclass LeftDrawer extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggleDrawer = this.toggleDrawer.bind(this);\r\n    this.state = {\r\n      open: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onRef(this);\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n    this.props.onRef(undefined);\r\n  }\r\n\r\n  toggleDrawer() {\r\n    var open = this.state.open;\r\n\r\n    this.setState({\r\n      open: !this.state.open\r\n    });\r\n    this.props.onToggle(!open);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: this.state.open ? \"LeftDrawer-drawerPaper\" : \"LeftDrawer-drawerPaperClose\"\r\n        }}\r\n        open={this.state.open}\r\n      >\r\n        <div style={{height: 65}}/>\r\n        <Link to={'/'} style={{ textDecoration: 'none' }}>\r\n          <Tooltip title=\"HOMEPAGE\">\r\n            <MenuItem className=\"LeftDrawer-menuItem\">\r\n              <ListItemIcon>\r\n                <Home />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"HOMEPAGE\" />\r\n            </MenuItem>\r\n          </Tooltip>\r\n        </Link>\r\n        \r\n        <Link to={'/spp'} style={{ textDecoration: 'none' }}>\r\n          <Tooltip title=\"SHORTEST PATH\">\r\n            <MenuItem className=\"LeftDrawer-menuItem\">\r\n              <ListItemIcon>\r\n                <Directions />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"SHORTEST PATH\" />\r\n            </MenuItem>\r\n          </Tooltip>\r\n        </Link>\r\n\r\n        <Link to={'/mfp'} style={{ textDecoration: 'none' }}>\r\n          <Tooltip title=\"MAX FLOW\">\r\n            <MenuItem className=\"LeftDrawer-menuItem\">\r\n              <ListItemIcon>\r\n                <TrendingUp />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"MAX FLOW\" />\r\n            </MenuItem>\r\n          </Tooltip>\r\n        </Link>\r\n\r\n        <Link to={'/mcfp'} style={{ textDecoration: 'none' }}>\r\n          <Tooltip title=\"MIN COST FLOW\">\r\n            <MenuItem className=\"LeftDrawer-menuItem\">\r\n              <ListItemIcon>\r\n                <TrendingDown />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"MIN COST FLOW\" />\r\n            </MenuItem>\r\n          </Tooltip>\r\n        </Link>\r\n\r\n      </Drawer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LeftDrawer;","import React, { Component } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { Typography, IconButton } from '@material-ui/core/';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport '../css/NavBar.css';\r\n\r\nclass NavBar extends Component {\r\n  render() {\r\n    \r\n    return(\r\n      <AppBar position=\"absolute\" className=\"NavBar-appBar\">\r\n        <Toolbar className=\"NavBar-toolbar\">\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"Open drawer\"\r\n              onClick={this.props.onClick}\r\n            >\r\n              <MenuIcon/>\r\n            </IconButton>\r\n            <span className=\"NavBar-spacer\"/>\r\n            <Typography variant=\"h6\" color=\"inherit\" className=\"NavBar-typography\">\r\n                NETWORK FLOWS OPTIMIZATION\r\n            </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    ) \r\n  }\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react'\r\nimport Drop from 'react-dropzone';\r\nimport {Paper} from '@material-ui/core';\r\n\r\nimport '../css/Dropzone.css'\r\n\r\nclass Dropzone extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            message: ''\r\n        }\r\n\r\n        this.getFile = this.props.getFile;\r\n        this.showMessage = this.props.showMessage;\r\n        this.mode = this.props.validationMode;\r\n\r\n        this.modes = {\r\n            SPP: {\r\n                nodes: ['id'],\r\n                edges: ['source', 'target']\r\n            }\r\n        }\r\n    }\r\n\r\n    adapt(f){\r\n        for(let el of f.nodes){\r\n            el.x = Math.random() * 600;\r\n            el.y = Math.random() * 600;\r\n            el.type = 'empty';\r\n        }\r\n\r\n        for(let el of f.edges){\r\n            el.type = 'emptyEdge';\r\n            el.handleText = '.';\r\n        }\r\n\r\n        return f;\r\n    }\r\n\r\n    validate(f){\r\n        if(!(f.nodes && f.edges)){\r\n            this.showMessage('Missing at least one of the following keywords: nodes | edges');\r\n            return false;\r\n        }\r\n\r\n        if(!(Array.isArray(f.nodes) && Array.isArray(f.edges))){\r\n            this.showMessage('Type error: nodes & edges must be array of objects');\r\n            return false;\r\n        }\r\n\r\n        let {nodes, edges} = this.modes[this.mode];\r\n\r\n        let nodesIds = [];\r\n        for(const [i, el] of f.nodes.entries()){\r\n            if(!nodes.every((e) => Object.keys(el).includes(e))){\r\n                this.showMessage(`Node at index [${i}] misses at least one of the following keywords: ${nodes.join(' | ')}`);\r\n                return false;\r\n            }\r\n            nodesIds.push(el.id);\r\n        }\r\n\r\n        for(const [i, el] of f.edges.entries()){\r\n            if(!edges.every((e) => Object.keys(el).includes(e))){\r\n                this.showMessage(`Edge at index [${i}] misses at least one of the following keywords: ${edges.join(' | ')}`);\r\n                return false;\r\n            }\r\n\r\n            if(!(nodesIds.includes(el.source) && nodesIds.includes(el.target))){\r\n                this.showMessage(`Edge at index [${i}]: source or target node does not exist`);\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    onDrop = (accepted, rejected) => {\r\n        const scope = this;\r\n\r\n        var reader = new FileReader();\r\n        \r\n        reader.onload = function(progressEvent){\r\n            try{\r\n                let f = JSON.parse(this.result);\r\n                if(!scope.validate(f)) return;\r\n\r\n                f = scope.adapt(f);\r\n                scope.getFile(f);\r\n            }\r\n            catch(e){\r\n                if (e instanceof SyntaxError) {\r\n                    scope.showMessage('Not a JSON file');\r\n                    return;\r\n                }\r\n                else throw(e);\r\n            }\r\n        };\r\n\r\n        for (var f of accepted) {\r\n            reader.readAsText(f);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"Dropzone-root\">\r\n                <Paper className={this.props.hide ? \"Dropzone-paperHide\" : \"Dropzone-paper\"}>\r\n                    <Drop accept=\".json\" onDrop={this.onDrop}>\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            <div {...getRootProps()} className=\"Dropzone-dropDiv\">\r\n                                <Paper className=\"Dropzone-dropPaper\">\r\n                                    <input {...getInputProps()}/>\r\n                                    <div>\r\n                                        <p>Try dropping the file here, or click to select a file to upload.</p>\r\n                                    </div>\r\n                                </Paper>\r\n                            </div>\r\n                        )}\r\n                    </Drop>\r\n                </Paper>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dropzone;","import React, { Component } from 'react';\r\nimport { GraphView } from 'react-digraph';\r\n\r\nimport '../css/GraphBuilder.css';\r\n\r\n\r\nconst GraphConfig =  {\r\n    NodeTypes: {\r\n        empty: {\r\n            // typeText: \"None\",\r\n            shapeId: \"#empty\", // relates to the type property of a node\r\n            shape: (\r\n                <symbol viewBox=\"0 0 150 150\" id=\"empty\" key=\"0\">\r\n                    <circle cx=\"75\" cy=\"75\" r=\"15\" stroke=\"grey\" />\r\n                </symbol>\r\n            )\r\n        },\r\n        startNode: {\r\n            shapeId: \"#startNode\", // relates to the type property of a node\r\n            shape: (\r\n                <symbol viewBox=\"0 0 150 150\" id=\"startNode\" key=\"1\">\r\n                    <circle cx=\"75\" cy=\"75\" r=\"15\" stroke=\"orange\" strokeWidth=\"2\"/>\r\n                </symbol>\r\n            )\r\n        },\r\n        endNode: {\r\n            shapeId: \"#endNode\", // relates to the type property of a node\r\n            shape: (\r\n                <symbol viewBox=\"0 0 150 150\" id=\"endNode\" key=\"2\">\r\n                    <circle cx=\"75\" cy=\"75\" r=\"15\" stroke=\"green\" strokeWidth=\"2\"/>\r\n                </symbol>\r\n            )\r\n        },\r\n        currentNode: {\r\n            // typeText: \"currentNode\",\r\n            shapeId: \"#currentNode\", // relates to the type property of a node\r\n            shape: (\r\n                <symbol viewBox=\"0 0 150 150\" id=\"currentNode\" key=\"3\">\r\n                    <circle cx=\"75\" cy=\"75\" r=\"15\" stroke=\"red\" strokeWidth=\"2\"/>\r\n                </symbol>\r\n            )\r\n        },\r\n        pathNode: {\r\n            shapeId: \"#pathNode\", // relates to the type property of a node\r\n            shape: (\r\n                <symbol viewBox=\"0 0 150 150\" id=\"pathNode\" key=\"4\">\r\n                    <circle cx=\"75\" cy=\"75\" r=\"15\" stroke=\"blue\" strokeWidth=\"2\"/>\r\n                </symbol>\r\n            )\r\n        },\r\n        visitedNode: {\r\n            // typeText: \"visitedNode\",\r\n            shapeId: \"#visitedNode\", // relates to the type property of a node\r\n            shape: (\r\n                <symbol viewBox=\"0 0 150 150\" id=\"visitedNode\" key=\"5\">\r\n                    <circle cx=\"75\" cy=\"75\" r=\"15\" stroke=\"yellow\" strokeWidth=\"2\"/>\r\n                </symbol>\r\n            )\r\n        }\r\n    },\r\n    NodeSubtypes: {},\r\n    EdgeTypes: {\r\n        emptyEdge: {  // required to show empty edges\r\n            shapeId: \"#emptyEdge\",\r\n            shape: (\r\n                <symbol viewBox=\"0 0 50 50\" id=\"emptyEdge\" key=\"0\"/>\r\n            ),\r\n            color: 'black'\r\n        },\r\n        pathEdge: {  // required to show empty edges\r\n            shapeId: \"#pathEdge\",\r\n            shape: (\r\n                <symbol viewBox=\"0 0 50 50\" id=\"pathEdge\" key=\"1\" />\r\n            ),\r\n            color: 'blue'\r\n        },\r\n        visitedEdge: {  // required to show empty edges\r\n            shapeId: \"#visitedEdge\",\r\n            shape: (\r\n                <symbol viewBox=\"0 0 50 50\" id=\"visitedEdge\" key=\"2\" />\r\n            ),\r\n            color: '#c9c900'\r\n        },\r\n        currentEdge: {\r\n            shapeId: \"#currentEdge\",\r\n            shape: (\r\n                <symbol viewBox=\"0 0 50 50\" id=\"currentEdge\" key=\"3\"/>\r\n            ),\r\n            color: 'red'\r\n        }\r\n    }\r\n}\r\n\r\nconst ARROW_SIZE = 5;\r\n\r\nclass GraphBuilder extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            selected: null\r\n        }\r\n\r\n        this.moveNode = this.props.moveNode;\r\n    }\r\n\r\n    setAttribute(c, aName, aValue, concat=true){\r\n        var attr = concat ? c.getAttribute(aName) : document.createAttribute(aName);\r\n        c.setAttribute(aName,  attr && concat ? attr + aValue : aValue);\r\n    }\r\n  \r\n    render() {\r\n        const NodeTypes = GraphConfig.NodeTypes;\r\n        const NodeSubtypes = GraphConfig.NodeSubtypes;\r\n        const EdgeTypes = GraphConfig.EdgeTypes;\r\n\r\n        var { labelSize, nodes, edges, layoutEngineType } = this.props;\r\n\r\n        layoutEngineType = layoutEngineType ? null : false;\r\n\r\n        return(\r\n            <div className=\"GraphBuilder-root\">\r\n                <GraphView  ref='GraphView'\r\n                    nodeKey=\"id\"\r\n                    nodes={nodes}\r\n                    edges={edges}\r\n                    selected={this.state.selected}\r\n                    nodeTypes={NodeTypes}\r\n                    nodeSubtypes={NodeSubtypes}\r\n                    edgeTypes={EdgeTypes}\r\n                    readOnly\r\n                    onSelectNode={(e) => e === this.state.selected ? this.setState({selected: null}) : this.setState({selected: e})}\r\n                    onCreateNode={() => {}}\r\n                    onUpdateNode={() => {}}\r\n                    onDeleteNode={() => {}}\r\n                    onSelectEdge={() => {}}\r\n                    onCreateEdge={() => {}}\r\n                    onSwapEdge={() => {}}\r\n                    onDeleteEdge={() => {}}\r\n                    canCreateEdge={() => {}}\r\n\r\n                    onBackgroundClick={(x, y) => this.moveNode(this.state.selected, {x,y})}\r\n\r\n                    layoutEngineType={layoutEngineType}\r\n\r\n                    edgeArrowSize={ARROW_SIZE}\r\n\r\n                    renderDefs={() => {\r\n                        return Object.entries(EdgeTypes).map((o) => {\r\n                            let k=o[0], v=o[1];\r\n\r\n                            return <marker\r\n                                id={`end-arrow-${k}`}\r\n                                key={`end-arrow-${k}`}\r\n                                viewBox={`0 -${ARROW_SIZE / 2} ${ARROW_SIZE} ${ARROW_SIZE}`}\r\n                                refX={`${ARROW_SIZE / 2}`}\r\n                                markerWidth={`${ARROW_SIZE}`}\r\n                                markerHeight={`${ARROW_SIZE}`}\r\n                                orient=\"auto\"\r\n                            >\r\n                                <path\r\n                                    className=\"arrow\"\r\n                                    d={`M0,-${ARROW_SIZE / 2}L${ARROW_SIZE},0L0,${ARROW_SIZE / 2}`}\r\n                                    style={{fill: v.color}}\r\n                                />\r\n                            </marker>\r\n                        })\r\n                    }}\r\n\r\n                    renderNodeText={(data, id, isSelected) => {\r\n                        return <text className=\"node-text\" textAnchor=\"middle\" color=\"white\">\r\n                            <tspan x=\"0\" dy=\"3\" fontSize=\"7px\">{data.title}</tspan>\r\n                            <tspan fill=\"red\" stroke=\"white\" strokeWidth=\"0.3\" fontWeight=\"bold\" x=\"0\" dy=\"25\" fontSize=\"10px\">{'distance' in data ? data.distance < 0 ? '∞' : data.distance : ''}</tspan>\r\n                            <title>{data.title}</title>\r\n                        </text>\r\n                    }}\r\n\r\n                    afterRenderEdge={(id, element, edge, edgeContainer, isEdgeSelected) => {\r\n                        edgeContainer.parentNode.insertBefore( edgeContainer, edgeContainer.parentNode.firstChild);\r\n                        \r\n                        var edgeColor = EdgeTypes[edge.type ? edge.type : 'emptyEdge'].color;\r\n                        /***** Setting edge color *****/ \r\n                        \r\n                        let comp = edgeContainer.querySelector('.edge');\r\n                        if(!comp) return;\r\n\r\n                        this.setAttribute(comp, 'style', `stroke: ${edgeColor};  marker-end: url(#end-arrow-${edge.type})`, false);\r\n                        /***** Setting arrow end color *****/ \r\n\r\n                        comp = document.querySelector('.arrow');\r\n                        this.setAttribute(comp, 'style',  `fill: ${edgeColor};`, false);\r\n\r\n                        //Because at first there is only one element, but then it would create 2 new elements per render\r\n                        let comp_list = edgeContainer.querySelectorAll('.edge-text');\r\n\r\n                        //When edge is moving \".edge-text\" elements do not exist\r\n                        if(!comp_list.length) return;\r\n\r\n                        comp = comp_list[0]; \r\n\r\n                        /***** Rotating labels according to edge slope *****/ \r\n\r\n                        let {x: x1, y: y1} = element.props.sourceNode;\r\n                        let {x: x2, y: y2} = element.props.targetNode;\r\n\r\n                        let x = (x1+x2)/2, y = (y1+y2)/2;\r\n\r\n                        let tan = (y2 - y1)/(x2 - x1);\r\n                        let deg = Math.atan(tan)*180/Math.PI;;\r\n\r\n                        this.setAttribute(comp, 'style', `fill: ${edgeColor}; stroke: white; stroke-width: 0.5px; font-weight: bold; font-size: ${labelSize}`, false);\r\n                        this.setAttribute(comp, 'transform', `translate(${x}, ${y}) rotate(${deg}) translate(0, -${labelSize})`, false);\r\n                        comp.innerHTML = edge.flow ? edge.flow : '';\r\n\r\n                        /***** Labels for costs and maximum capacity *****/ \r\n                        \r\n                        if(edge.cost && comp_list.length === 1){\r\n                            let costTag = comp.cloneNode(true);\r\n                            \r\n                            this.setAttribute(costTag, 'transform', ` translate(-${edge.capacity ? labelSize : 0}, ${labelSize*2})`);\r\n                            costTag.id = \"cost-tag\";\r\n                            costTag.style.fill = 'red';\r\n                            costTag.innerHTML = edge.cost;\r\n                            \r\n                            comp.parentElement.appendChild(costTag);\r\n                        }\r\n                        else if(comp_list[1] && comp_list[1].id === 'cost-tag'){\r\n                                let transform = comp_list[0].getAttribute('transform');\r\n                                this.setAttribute(comp_list[1], 'transform', `${transform} translate(-${edge.capacity ? labelSize : 0}, ${labelSize*2})`, false);\r\n                        }\r\n                        \r\n                        if(edge.capacity && comp_list.length === 1){\r\n                            let capacityTag = comp.cloneNode(true);\r\n\r\n                            this.setAttribute(capacityTag, 'transform', ` translate(${edge.cost ? labelSize : 0}, ${labelSize*2})`);\r\n                            capacityTag.id = \"capacity-tag\";\r\n                            capacityTag.style.fill = 'blue';\r\n                            capacityTag.innerHTML = edge.capacity;\r\n                            \r\n                            comp.parentElement.appendChild(capacityTag);\r\n                        }\r\n                        else {\r\n                            let transform = comp_list[0].getAttribute('transform');\r\n                            if(comp_list[1] && comp_list[1].id === 'capacity-tag'){\r\n                                this.setAttribute(comp_list[1], 'transform', `${transform} translate(${edge.cost ? labelSize : 0}, ${labelSize*2})`, false);\r\n                            }\r\n                            else if(comp_list[2] && comp_list[2].id === 'capacity-tag'){\r\n                                this.setAttribute(comp_list[2], 'transform', `${transform} translate(${edge.cost ? labelSize : 0}, ${labelSize*2})`, false);\r\n                            }\r\n                        }\r\n                        \r\n                    }}\r\n                />\r\n            </div>\r\n        ) \r\n    }\r\n}\r\n\r\nexport default GraphBuilder;","import React, { Component } from 'react';\r\nimport Dropzone from './Dropzone';\r\nimport GraphBuilder from './GraphBuilder';\r\nimport { Button, ButtonGroup, MenuItem, OutlinedInput, Paper, TextField } from '@material-ui/core';\r\nimport { PlayArrow, KeyboardArrowLeft, KeyboardArrowRight } from '@material-ui/icons';\r\n\r\nimport '../css/SPP.css'\r\n\r\n// var d3 = require('d3-force');\r\n\r\nclass SPP extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            message: '',\r\n            startNode: '',\r\n            endNode: '',\r\n            indexes: {},\r\n            nextSteps: [],\r\n            endIndex: false,\r\n            stateIndex: 0,\r\n            states: []\r\n        }\r\n    }\r\n\r\n    getFile = (file) => {\r\n        var indexes = {};\r\n\r\n        for(let [i, el] of file.nodes.entries()){\r\n            indexes[el.id] = i;\r\n        }\r\n\r\n        var { states } = this.state;\r\n        states.push({phase: 0, step: 0, substep: 0, currentNode: null, file});\r\n\r\n        this.setState({ states, indexes });\r\n    }\r\n\r\n    onReset = () => this.setState({states: [], indexes: {}, stateIndex: 0, startNode: '', endNode: '', endIndex: false, nextSteps: []});\r\n\r\n    onChange = (key) => (e) => {\r\n        var { states, engine, stateIndex } = this.state;\r\n\r\n        states.splice(1, states.length - 1);\r\n        stateIndex = 0;\r\n\r\n        for(let n of states[stateIndex].file.nodes){\r\n            if(n.id === e.target.value){\r\n                n.type = key\r\n            }\r\n            else if(n.type === key) n.type = 'empty';\r\n        }\r\n\r\n        for(let n of states[stateIndex].file.edges) n.type = 'emptyEdge';\r\n        states[stateIndex].currentNode = null\r\n\r\n        this.setState({\r\n            [key]: e.target.value,\r\n            states,\r\n            stateIndex,\r\n            engine: !engine, \r\n            nextSteps: [], \r\n            endIndex: false\r\n        })\r\n    }\r\n\r\n    showMessage = (message) => {\r\n        this.setState({ message });\r\n        message = '';\r\n        setTimeout(() => this.setState({ message }), 5000);\r\n    }\r\n\r\n    moveNode = (n, e) => {\r\n        if(!n) return;\r\n        \r\n        var { states, indexes } = this.state;\r\n\r\n        var i = indexes[n.id]; \r\n\r\n        for(let s of states){\r\n            s.file.nodes[i].x = e.x;\r\n            s.file.nodes[i].y = e.y;\r\n        }\r\n    }\r\n\r\n    updateNode(nodes, pred, i, dist){\r\n        let el = nodes[i];\r\n\r\n        if(el.type === 'empty') el.type = 'visitedNode';\r\n        \r\n        /******* If distance < 0, node was never explored *******/\r\n        if(el.distance < 0 || el.distance > dist){\r\n            el.distance = dist;\r\n            el.pred = pred;\r\n        }\r\n    }\r\n\r\n    nextStep = () => {\r\n        let { states, stateIndex, engine } = this.state;\r\n\r\n        if(states[++stateIndex]){\r\n            this.setState({ stateIndex, engine: !engine});\r\n        }\r\n        else{\r\n            this.launchAlgorithm();\r\n        }\r\n    }\r\n\r\n    prevStep = () => {\r\n        let { stateIndex, engine } = this.state;\r\n\r\n        stateIndex--;\r\n        \r\n        this.setState({ stateIndex, engine: !engine });\r\n    }\r\n\r\n    launchAlgorithm(name = 'dijkstra'){\r\n        var { states, stateIndex, startNode, endNode, engine, indexes, nextSteps} = this.state;\r\n\r\n        var {file: {nodes, edges}, currentNode, phase, step, substep} = states[stateIndex];\r\n\r\n        var algorithm = require(`../algorithms/${name}`);\r\n\r\n        switch(phase){\r\n            case 0:\r\n                {\r\n                    let newState = JSON.parse(JSON.stringify(states[stateIndex]));\r\n\r\n                    /******* POTENTIALLY AMBIGUOUS *******/\r\n                    let {file: {nodes, edges}} = newState;\r\n\r\n                    currentNode = startNode;\r\n                    nodes[indexes[currentNode]].prevType = nodes[indexes[currentNode]].type\r\n                    nodes[indexes[currentNode]].type = 'currentNode';\r\n\r\n                    algorithm.preprocess(nodes, edges, currentNode);\r\n\r\n                    newState.currentNode = currentNode;\r\n                    newState.phase++;\r\n                    states.push(newState);\r\n\r\n                    stateIndex++;\r\n\r\n                    this.setState({ states, stateIndex, engine: !engine });\r\n                }\r\n                break;\r\n            case 1:\r\n                if(step === 0 && substep === 0){\r\n                    for(let [i, el] of edges.entries()){\r\n                        let node =  nodes[indexes[el.source]];\r\n                        \r\n                        if(!node.leavingStar) node.leavingStar = [];\r\n\r\n                        node.leavingStar.push(i);\r\n                    }\r\n                }\r\n                \r\n                if(nodes[indexes[currentNode]].leavingStar && substep < nodes[indexes[currentNode]].leavingStar.length){\r\n                    if(substep > 0){\r\n                        let idx = nodes[indexes[currentNode]].leavingStar[substep-1]\r\n                        edges[idx].type = edges[idx].prevType;\r\n                        delete edges[idx].prevType;\r\n                    }\r\n                    \r\n                    let idx = nodes[indexes[currentNode]].leavingStar[substep]\r\n\r\n                    algorithm.process(nodes, edges[idx], currentNode, endNode, nextSteps, indexes, this.updateNode);\r\n\r\n                    edges[idx].prevType = edges[idx].type;\r\n                    edges[idx].type = 'currentEdge';\r\n\r\n                    let newState = JSON.parse(JSON.stringify(states[stateIndex]));\r\n\r\n                    newState.substep++;\r\n                    states.push(newState);\r\n                }\r\n                else{\r\n                    if(substep > 0){\r\n                        let idx = nodes[indexes[currentNode]].leavingStar[substep-1]\r\n                        edges[idx].type = edges[idx].prevType;\r\n                        delete edges[idx].prevType;\r\n                    }\r\n\r\n                    nodes[indexes[currentNode]].type = nodes[indexes[currentNode]].prevType;\r\n                    delete nodes[indexes[currentNode]].prevType;\r\n\r\n                    currentNode = nextSteps[step];\r\n\r\n                    let newState = null;\r\n\r\n                    if(!currentNode){\r\n                        phase++;\r\n                        step = 0;\r\n\r\n                        currentNode = endNode;\r\n                        nodes[indexes[currentNode]].prevType = nodes[indexes[currentNode]].type;\r\n                        nodes[indexes[currentNode]].type = 'currentNode';\r\n                        \r\n                        newState = JSON.parse(JSON.stringify(states[stateIndex]));\r\n                        newState.phase++;\r\n                        newState.step = 0;\r\n                        newState.substep = 0;\r\n                    }\r\n                    else{\r\n                        nodes[indexes[currentNode]].prevType = nodes[indexes[currentNode]].type;\r\n                        nodes[indexes[currentNode]].type = 'currentNode';\r\n                        \r\n                        newState = JSON.parse(JSON.stringify(states[stateIndex]));\r\n                        newState.substep = 0;\r\n                        newState.step++;\r\n                    }\r\n\r\n                    newState.currentNode = currentNode;\r\n\r\n                    states.push(newState);\r\n                }\r\n\r\n                stateIndex++;\r\n\r\n                this.setState({ states, stateIndex, nextSteps, engine: !engine });\r\n                break;\r\n            case 2:\r\n                currentNode = algorithm.postprocess(edges, nodes[indexes[currentNode]]);\r\n                nodes[indexes[currentNode]].prevType = nodes[indexes[currentNode]].type;\r\n                nodes[indexes[currentNode]].type = 'currentNode';\r\n\r\n                let disableNext = currentNode === startNode;\r\n\r\n                let newState = JSON.parse(JSON.stringify(states[stateIndex]))\r\n                newState.step++;\r\n                \r\n                stateIndex++;\r\n\r\n                if(!disableNext){        \r\n                    newState.currentNode = currentNode;\r\n                    states.push(newState);\r\n                    \r\n                    this.setState({  states, stateIndex, engine: !engine});\r\n                }\r\n                else{\r\n                    newState.file.nodes[indexes[currentNode]].type = newState.file.nodes[indexes[currentNode]].prevType;\r\n                    delete newState.file.nodes[indexes[currentNode]].prevType;\r\n\r\n                    newState.currentNode = null;\r\n                    states.push(newState);\r\n                    this.setState({  states, engine: !engine, endIndex: stateIndex });\r\n                }\r\n\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { states, stateIndex, message, engine, startNode, endNode, endIndex} = this.state;\r\n        const file = states[stateIndex] ? states[stateIndex].file : null;\r\n        \r\n        return (\r\n            <div className=\"SPP-root\">\r\n                <div><h1>SPP</h1></div>\r\n                <div className={file ? \"SPP-dropClosed\" : \"SPP-drop\"}>\r\n                    <Dropzone\r\n                        getFile={this.getFile}\r\n                        hide={file}\r\n                        showMessage={this.showMessage}\r\n                        validationMode=\"SPP\"\r\n                    />\r\n                </div>\r\n                \r\n                {!file && <div className=\"SPP-spacer\">\r\n                    <Paper className=\"SPP-paper\">\r\n                        <div className={message ? \"SPP-paperDiv\" : \"SPP-paperDivHide\"}>\r\n                            {message}\r\n                        </div>\r\n                    </Paper>\r\n                </div>}\r\n                \r\n                {file && <div className=\"SPP-graph\">\r\n                    <GraphBuilder\r\n                        labelSize = {13}\r\n                        nodes={file.nodes}\r\n                        edges={file.edges}\r\n                        layoutEngineType={engine}\r\n                        onSelectNode={this.moveNode}\r\n                        moveNode={this.moveNode}\r\n                    />\r\n                    \r\n                    <div className=\"SPP-spacer\">\r\n                        <Button className=\"SPP-button\" onClick={() => this.onReset()}>RESET</Button>\r\n\r\n                        <ButtonGroup className=\"SPP-buttonRight\">\r\n                            <Button onClick={() => this.prevStep()} disabled={stateIndex === 0}>\r\n                                <KeyboardArrowLeft/>\r\n                            </Button>\r\n\r\n                            <Button onClick={() => this.nextStep()} disabled={!startNode || !endNode || stateIndex === endIndex}>\r\n                                <KeyboardArrowRight/>\r\n                            </Button>\r\n                        </ButtonGroup>\r\n                    </div>\r\n                    \r\n                    <div className=\"SPP-spacer\">\r\n                        <TextField\r\n                            select\r\n                            className=\"SPP-select\"\r\n                            label=\"Start Node\"\r\n                            value={startNode}\r\n                            onChange={this.onChange('startNode')}\r\n                            margin=\"normal\"\r\n                            input={<OutlinedInput/>}\r\n                        >\r\n                            <MenuItem key={'empty'} value='' />\r\n                            {file.nodes.map(e => (\r\n                                <MenuItem key={e.id} value={e.id}>{e.title}</MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n\r\n                        <TextField\r\n                            select\r\n                            className=\"SPP-select\"\r\n                            label=\"End Node\"\r\n                            value={endNode}\r\n                            onChange={this.onChange('endNode')}\r\n                            margin=\"normal\"\r\n                            input={<OutlinedInput/>}\r\n                        >\r\n                            <MenuItem key={'empty'} value='' />\r\n                            {file.nodes.map(e => (\r\n                                <MenuItem key={e.id} value={e.id}>{e.title}</MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n\r\n                        <Button disabled={!startNode || !endNode} className=\"SPP-button\" onClick={() => this.launchAlgorithm()}>\r\n                            <PlayArrow/>\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"SPP-infoBox\">\r\n                        <h1>Info</h1>\r\n                        <table>\r\n                            <tr><td>Phase:</td><td>{states[stateIndex].phase}</td></tr>\r\n                            <tr><td>Step:</td><td>{states[stateIndex].step}</td></tr>\r\n                            <tr><td>Substep:</td><td>{states[stateIndex].substep}</td></tr>\r\n                        </table>\r\n                    </div>\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default SPP;","import React, { Component } from 'react'\r\nimport Dropzone from './Dropzone';\r\n\r\nimport '../css/MFP.css'\r\n\r\nclass MFP extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            file: null\r\n        }\r\n    }\r\n\r\n    getFile = (f) => {\r\n        this.setState({\r\n            file: f\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"MFP-root\">\r\n                <div><h1>MFP</h1></div>\r\n                <div className={this.state.file ? \"MFP-contentOneClosed\" : \"MFP-contentOne\"}>\r\n                    TBI\r\n                    <Dropzone\r\n                        getFile={this.getFile}\r\n                        hide={this.state.file}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default MFP;","import React, { Component } from 'react'\r\nimport Dropzone from './Dropzone';\r\n\r\nimport '../css/MCFP.css'\r\n\r\nclass MCFP extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            file: null\r\n        }\r\n    }\r\n\r\n    getFile = (f) => {\r\n        this.setState({\r\n            file: f\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"MCFP-root\">\r\n                <div><h1>MCFP</h1></div>\r\n                <div className={this.state.file ? \"MCFP-contentOneClosed\" : \"MCFP-contentOne\"}>\r\n                    TBI\r\n                    <Dropzone\r\n                        getFile={this.getFile}\r\n                        hide={this.state.file}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default MCFP;","import React, {Component} from 'react';\r\nimport './css/App.css';\r\n\r\nimport Homepage from \"./components/Homepage\";\r\nimport LeftDrawer from './components/LeftDrawer';\r\nimport NavBar from './components/NavBar';\r\nimport SPP from './components/SPP';\r\nimport MFP from './components/MFP';\r\nimport MCFP from './components/MCFP';\r\n\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  onToggleDrawer = (open) => {\r\n    this.setState({ open: open });\r\n  }\r\n  \r\n  toggleDrawer() {\r\n    this.sidebar.toggleDrawer();\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <div>\r\n          <Router>\r\n            <div className=\"App-root\">\r\n              <NavBar onClick={() => this.toggleDrawer()}></NavBar>\r\n              <main className=\"App-container\">\r\n                <LeftDrawer onRef={ref => (this.sidebar = ref)} onToggle={this.onToggleDrawer}/>\r\n                <div className=\"App-centerPane\">\r\n                  <Switch>\r\n                    <Route \r\n                      exact path=\"/\"\r\n                      component={Homepage}\r\n                    />\r\n                  </Switch>\r\n\r\n                  <Switch>\r\n                    <Route \r\n                      exact path=\"/spp\"\r\n                      component={SPP}\r\n                    />\r\n                  </Switch>\r\n\r\n                  <Switch>\r\n                    <Route \r\n                      exact path=\"/mfp\"\r\n                      component={MFP}\r\n                    />\r\n                  </Switch>\r\n\r\n                  <Switch>\r\n                    <Route \r\n                      exact path=\"/mcfp\"\r\n                      component={MCFP}\r\n                    />\r\n                  </Switch>\r\n                </div>\r\n              </main>\r\n            </div>\r\n          </Router>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export function preprocess(nodes, edges, currentNode){\r\n    for(let el of nodes){\r\n        el.distance = el.id === currentNode ? 0 : -1;\r\n        if(!['startNode', 'endNode', 'currentNode'].includes(el.type)) el.type = 'empty';\r\n        delete el.pred;\r\n    }\r\n\r\n    for(let el of edges){\r\n        el.type = 'emptyEdge';\r\n    }\r\n}\r\n\r\nexport function process(nodes, edge, currentNode, endNode, nextSteps, indexes, updateNode){\r\n    edge.type = 'visitedEdge';\r\n    \r\n    if(edge.target !== endNode && nodes[indexes[edge.target]].type !== 'visitedNode') nextSteps.push(edge.target);\r\n    var { distance } = nodes[indexes[currentNode]]\r\n    updateNode(nodes, edge.source, indexes[edge.target], (edge.cost ? edge.cost : 1) + distance);\r\n}\r\n\r\nexport function postprocess(edges, currentNode){\r\n    if(currentNode.prevType === 'visitedNode') currentNode.prevType = 'pathNode';\r\n\r\n    for(let el of edges) if(currentNode.pred === el.source && currentNode.id === el.target){\r\n        el.type = 'pathEdge';\r\n        break;\r\n    }\r\n\r\n    currentNode.type = currentNode.prevType;\r\n    delete currentNode.prevType;\r\n\r\n    return currentNode.pred;\r\n}"],"sourceRoot":""}